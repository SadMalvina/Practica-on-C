#include <ncurses.h>

// Structure for storing information about a single bus
typedef struct tagITEM { //Setting a structure with information about buses
  int numberroute; // Here you can enter an array of characters (a string) with the route number
  int busfleetnumber; // Here you can enter an array of characters (a string) with the bus fleet number
  int starttimech;
  int starttimem;// Here you can enter an array of characters (a string) with the start time
  int endtimech;
  int endtimem;//Here you can enter an array of characters (a string) with the end time
  int routekm; //Here you can enter an array of characters with the all route in KM
} ITEM; // Setting a name for the structure type "ITEM"
//!RouteKM ввод в метрах приводить к км
// Array for a maximum of 100 buses
    ITEM Bus[100];
// Number of occupied elements in the array
    int Number = 0;

// A function to display all of the elements
void Print( void ) {
  int i; //Setting the counter
  initscr();
  noecho();
 // keypad(stdscr, true);

    printw("╔═══╦═══════════╦══════════════╦═════════╦═══════╦═══════╗\n"); //"Header" of the graphic
    printw("║ N ║NumberRoute║BusFleetNumber║StartTime║EndTime║RouteKm║\n"); //table when output
  for (i = 0; i < Number; i++) { //Setting the "for" counter to output array elements by number
      printw ("╠═══╬═══════════╬══════════════╬═════════╬═══════╬═══════╣\n");
    printw("║%3i║%11i║%14i║    %02i:%02i║  %02i:%02i║%7i║\n",
    i + 1, Bus[i].numberroute, Bus[i].busfleetnumber,
           Bus[i].starttimech, Bus[i].starttimem, Bus[i].endtimech,
           Bus[i].endtimem, Bus[i].routekm);
  }
  printw ("╚═══╩═══════════╩══════════════╩═════════╩═══════╩═══════╝\n"); //End of the graphic table
  getch();
  refresh();
  endwin();

} // End of 'Print' function

    // Function for deleting an element
void Del( void ) {

  char i; //Setting the counter
  char d, dt;

  initscr();
  noecho();
  keypad(stdscr, true);

  Print();

  printw("Enter the number of the item to delete > ");
  i = getch();
      i = i - 48;
      //putchar(d);
  if (i < 0 || i > Number) {
    printw("The element with the number %i does not exist\n", i);
    return;
  }

  for (i--; i < Number - 1; i++)
    Bus[i] = Bus[i + 1];

  Number --;
  getch();
  Print();
  refresh();
  endwin();
} // End of 'Del' function

// Function for adding an element
void Add( void ) {
char a;
int i = 0, ch = 0, dh = 0; ////Setting the counter
initscr();
  noecho();
  keypad(stdscr, false);
  if (Number == 99) {
    printw("You can't add another element\n");
    return;
  }
  printw ("╔══════════════════════════╗\n");
  printw ("║Enter number route >      ║\n");
  printw ("╚══════════════════════════╝\n");
  while (dh != 1) {
    a = getch();
    while (a != '\n') {
        if ((a > 57) || (a < 48)) {
          while ((a > 57) || (a < 48)) {
            if (a != '\n') printw("Only numbers\n");
            a = getch();
          }
        }
        a = a - 48;
        ch = ch * 10 + a;
        dh = 1;
        a = getch();
        if (ch > 9999) {
          printw ("Overflow\n");
          dh = 0;
          ch = 0;
          //fflush(stdin);
        }
    }
  }
  Bus[Number].numberroute = ch;
  dh = 0;
  printw ("╔══════════════════════════╗\n");
  printw ("║Enter bus fleet number >  ║\n");
  printw ("╚══════════════════════════╝\n");
  while (dh != 1) {
    a = getch();
    while (a != '\n') {
        if ((a > 57) || (a < 48)) {
          while ((a > 57) || (a < 48)) {
            if (a != '\n') printw("Only numbers\n");
            a = getch();
          }
        }
        a = a - 48;
        ch = ch * 10 + a;
       // putchar(a);
        a = getch();
        dh = 1;
        if (ch > 99999) {
          printw ("Overflow\n");
          dh = 0;
          ch = 0;
        }
    }
  }
  Bus[Number].busfleetnumber = ch;
  //putchar ('\n');
  ch = 0;
  dh = 0;
  printw ("╔══════════════════════════╗\n");
  printw ("║Enter start time >        ║\n");
  printw ("╚══════════════════════════╝\n");
  while (dh != 1) {
  a = getch();
    while (a != '\n') {
        if ((a > 57) || (a < 48)) {
          while ((a > 57) || (a < 48)) {
		  if (a != '\n') printw("Only numbers\n");
            a = getch();
          }
        }
        a = a - 48;
        ch = ch * 10 + a;
        dh = 1;
        a = getch();
        if (ch > 23) {
            printw("The clock (hours) cannot be more than 23.\n");
            dh = 0;
            ch = 0;
        } else if (ch < 0) {
          printw("Hours (hours) cannot be less than 00.\n");
            dh = 0;
            ch = 0;
        }
    }
  }
    Bus[Number].starttimech = ch;
    dh = 0;
    ch = 0;
  while (dh != 1) {
    a = getch();
    while (a != '\n') {
        if ((a > 57) || (a < 48)) {
          while ((a > 57) || (a < 48)) {
            if (a != '\n') printw("Only numbers\n");
            a = getch();
          }
        }
        a = a - 48;
        ch = ch * 10 + a;
        a = getch();
        dh = 1;
        if (ch > 59) {
          printw ("The clock (minutes) cannot be more than 59.\n");
	  dh = 0;
          ch = 0;
        }
        if (ch < 0) {
          printw ("Hours (minutes) cannot be less than 00.\n");
          dh = 0;
          ch = 0;
        }
    }
  }
    Bus[Number].starttimem = ch;
    //putchar('\n');
  ch = 0;
  dh = 0;
    printw ("╔══════════════════════════╗\n");
    printw ("║Enter end time >          ║\n");
    printw ("╚══════════════════════════╝\n");
  while (dh != 1) {
    a = getch();
    while (a != '\n') {
        if ((a > 57) || (a < 48)) {
          while ((a > 57) || (a < 48)) {
            if (a != '\n') printw("Only numbers\n");
            a = getch();
          }
        }
        a = a - 48;
        ch = ch * 10 + a;
        //putchar(a);
        dh = 1;
        a = getch();
        if (ch > 23) {
            printw("The clock (hours) cannot be more than 23.\n");
            dh = 0;
            ch = 0;
        } else if (ch < 0) {
            printw("Hours (hours) cannot be less than 00.\n");
	     dh = 0;
            ch = 0;
        }
        if (ch == Bus[Number].starttimech) {
            printw("The interval between departure and arrival hoursis at least an hour!\n");
            dh = 0;
            ch = 0;
        }
    }
  }
    Bus[Number].endtimech = ch;
    //putchar('\n');
    dh = 0;
    ch = 0;
  while (dh != 1) {
    a = getch();
    while (a != '\n') {
        if ((a > 57) || (a < 48)) {
          while ((a > 57) || (a < 48)) {
            if (a != '\n') printw("Only numbers\n");
            a = getch();
          }
        }
        a = a - 48;
        ch = ch * 10 + a;
        //putchar(a);
        a = getch();
        dh = 1;
        if (ch > 59) {
          printw ("The clock (minutes) cannot be more than 59.\n");
          dh = 0;
          ch = 0;
        }
        if (ch < 0) {
          printw ("Hours (minutes) cannot be less than 00.\n");
          dh = 0;
          ch = 0;
	  }
    }
  }
    Bus[Number].endtimem = ch;
    //putchar('\n');
    dh = 0;
    ch = 0;
  printw ("╔══════════════════════════╗\n");
  printw ("║Enter route in m >        ║\n");
  printw ("╚══════════════════════════╝\n");
  while (dh != 1) {
    a = getch();
    while (a != '\n') {
      if ((a > 57) || (a < 48)) {
          while ((a > 57) || (a < 48)) {
            if (a != '\n') printw("Only numbers\n");
            a = getch();
          }
      }
      a = a - 48;
      ch = ch * 10 + a;
      //putchar(a);
      a = getch();
      dh = 1;
        if (ch > 999999) {
          printw ("Overflow\n");
          dh = 0;
          ch = 0;
        }
    }
  }
  ch = ch / 1000;
  Bus[Number].routekm = ch;
  //Bus[Number].routekm = '\0';
  //putchar ('\n');

  Number++;
  getch();
  refresh();
  endwin();
} // End of 'Add' function

int Menu() {
  int c = 0, k = 0;
  int i = 0, Curr = 0;
  initscr();
  noecho();
  keypad(stdscr, true);
  do {
	 if (Curr == 0) {
         printw (
         "#201#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#187\n"
         "#186    0 : Exit          <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#201#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#187\n"
         "#186    0 : Exit                 #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
	    }
	 if (Curr == 1) {
         printw (
         "#186    1 : Add           <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#186    1 : Add                  #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         }
	 if (Curr == 2) {
         printw (
         "#186    2 : Save in file  <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#186    2 : Save in file         #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         }
         if (Curr == 3) {
         printw (
         "#186    3 : Download      <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#186    3 : Download             #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         }
     	 if (Curr == 4) {
         printw (
         "#186    4 : Print         <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#186    4 : Print                #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         }
      	 if (Curr == 5) {
         printw (
         "#186    5 : Sort          <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#186    5 : Sort                 #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         }
     	 if (Curr == 6) {
         printw (
         "#186    6 : Delete        <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#186    6 : Delete               #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         }
     	 if (Curr == 7) {
         printw (
         "#186    7 : Change        <<<    #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         } else {
         printw (
         "#186    7 : Change               #186\n"
         "#204#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#205#185\n");
         }
     	 printw("\n");

  k = getch();
  if (k == KEY_DOWN) {
	    if (Curr == 7) Curr = 0;
            else Curr++;
            }
            clear();
    if (k == KEY_UP) {
	    if (Curr == 0) Curr = 7;
            else Curr--;
            }
            clear();

    } while (k != 10);
  getch();
  refresh();
  endwin();
  return Curr;
}

int main( void ) {
  int Selection;

 while ((Selection = Menu()) != 48 && Selection != 27) {
    switch (Selection) {
        case 1:
          Add();
          break;
        //case 2:
        //  Print();
        //  Save();
        //  break;
        //case 3:
        //  Print();
        //  Load();
        //  break;
        case 4:
          Print();
          break;
        //case 5:
        //  MenuSortChoice();
        //  break;
        case 6:
          Del();
          break;
        //case 7:
        //  Change();
        //  Print();
        //  break;
    }
}
} // End the function of the main menu
